name: Tests (MacOS)
on:
  push:
    branches:
      - '*'

jobs:
  tests-simple:
    name: Tests
    strategy:
      matrix:
        dc: [ldc-1.41.0, ldc-latest]
        os:
          - macOS-13
          - macOS-14
          - macOS-15
        py_install_type:
          - "build"
          - "pyenv"
    env:
      ODOOD_PREFER_PY_INSTALL: ${{ matrix.py_install_type }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.dc }}

      - name: Install system dependencies
        run: |
          brew install libpq
          brew install postgresql@14
          brew install libzip
          brew install python@3.13

      - name: PyEnv - Install
        if: matrix.py_install_type == 'pyenv'
        run: |
          brew install pyenv

      - name: Configure git user (to make git tests work)
        run: |
          git config --global user.email "odood@odood.dev"
          git config --global user.name "Odood"

      - name: Run simple tests tests
        run: dub test -b unittest-cov

      - name: Start postgresql server
        run: |
          brew services start postgresql
          echo 'Check PostgreSQL service is running'
          i=10
          while [ $i -gt 0 ]; do
              echo 'Check PostgreSQL service status'
              pg_isready && break
              ((i--))
              if [ $i == 0 ]; then
                  echo 'PostgreSQL service not ready, all attempts exhausted'
                  exit 1
              fi
              echo 'PostgreSQL service not ready, wait 5 more sec, attempts left: $i'
              sleep 5
          done

      # Homebrew creates an account with the same name as the installing user, but no password
      - name: Create postgresql user
        env:
          PGHOST: localhost
          PGPORT: 5432
        run: |
          psql postgres -c "CREATE USER odoo WITH SUPERUSER PASSWORD 'odoo';"


      - name: Run Odood integration tests
        run: |
          dub test -b unittest-cov -c unittest-integration-ut

      - name: Cleanup non-project coverage
        run: |
          dub fetch d-cobertura
          dub run d-cobertura@1.0.0 -- - *.lst
          rm -f ./*.lst

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v5
        with:
          flags: tests-macos
          name: tests-macos
          token: ${{ secrets.CODECOV_TOKEN }}

