name: Release
on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'
      - 'v*.*.*\+*'

env:
  ODOOD_DLANG_COMPILER: ldc-1.39.0

jobs:
  build-ubuntu-20_04:
    name: Build Ubuntu:20.04
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ env.ODOOD_DLANG_COMPILER }}

      - name: Install system dependencies
        uses: lyricwulf/abc@v1
        with:
          linux: libzip-dev libpq-dev python3-dev

      - name: Set version from tag
        run: echo "${{ github.ref_name }}" > ./subpackages/lib/data/ODOOD_VERSION

      - name: Build Odood
        run: |
          dub build -b release -c bash-autocomplete
          dub build -b release

      - name: Prepare dependencies for deb package
        id: prepare_deb_deps
        run: |
          echo "universal_deb_deps=$(cat .ci/deps/universal-deb.txt | tr '\n' ',' | sed 's/,$/\n/')" >> $GITHUB_OUTPUT

      - name: Prepare debian build
        run: |
          mkdir -p .debpkg/usr/bin
          mkdir -p .debpkg/etc/bash_completion.d
          cp build/odood .debpkg/usr/bin/odood
          cp build/odood.bash .debpkg/etc/bash_completion.d/odood.bash
          chmod a+x .debpkg/usr/bin/odood

      - name: Build debian package
        id: build_debian_package
        uses: jiro4989/build-deb-action@v2
        with:
          package: odood
          package_root: .debpkg
          maintainer: Dmytro Katyukha <dmytro.katyukha@gmail.com>
          version: ${{ github.ref_name }} # v*.*.*
          arch: 'amd64'
          depends: ${{ steps.prepare_deb_deps.outputs.universal_deb_deps }}
          desc: 'Odood - the easy way to handle multiple local Odoo installations.'

      - name: Move deb package to build dir with correct name
        run: |
          mv ${{ steps.build_debian_package.outputs.file_name }} build/odood_${{ github.ref_name }}_amd64.deb

      - name: Upload Odood compiled assets
        uses: actions/upload-artifact@v3
        with:
          name: odood-amd64
          path: |
            build/odood
            build/odood.bash
            build/odood_${{ github.ref_name }}_amd64.deb

  publish_release:
    name: Publish Release
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    needs:
      - build-ubuntu-20_04
    steps:
      - uses: actions/checkout@v3

      - name: 'Download artifacts for amd64'
        uses: actions/download-artifact@v3
        with:
          name: odood-amd64
          path: build-amd64

      - name: "Prepare release notes"
        run: csplit --prefix=CHANGELOG. --suffix=%02d.md CHANGELOG.md '/---/'

      - name: 'Show directory structure'
        run: ls -R

      - name: Check RC/alpha Release
        id: check-rc-release
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+-([0-9a-zA-Z.+-]+)$ ]]; then
              echo "is_rc_release=true" >> $GITHUB_OUTPUT
          elif [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+(\+.*)?$ ]]; then
              echo "is_rc_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Release (RC)
        uses: softprops/action-gh-release@v1
        if: steps.check-rc-release.outputs.is_rc_release == 'true'
        with:
          files: |
            build-amd64/odood_${{ github.ref_name }}_amd64.deb
          prerelease: true
          body_path: CHANGELOG.00.md

      - name: Release
        uses: softprops/action-gh-release@v1
        if: steps.check-rc-release.outputs.is_rc_release == 'false'
        with:
          files: |
            build-amd64/odood_${{ github.ref_name }}_amd64.deb
          prerelease: false
          body_path: CHANGELOG.00.md
